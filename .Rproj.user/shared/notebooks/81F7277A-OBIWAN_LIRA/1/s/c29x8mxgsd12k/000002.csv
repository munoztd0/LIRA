"0","#subset only obese"
"0","tables <- c(""PAV"",""INST"",""PIT"",""HED"", ""intern"")"
"0","dflist <- lapply(mget(tables),function(x)subset(x, group == 'obese'))"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","#exclude participants (242 really outlier everywhere, 256 can't do the task, 228 REALLY hated the solution and thus didn't ""do"" the conditioning)"
"0","# dflist <- lapply(mget(tables),function(x)filter(x, id %notin% c(242, 256, 228))"
"0","# list2env(dflist, envir=.GlobalEnv)"
"0",""
"0","#center covariates paste0(names(PAV), collapse=""','"")"
"0","medic$ageF = medic$age; medic$weightLoss = -(medic$BMI_diff); medic$bmi1 = medic$BMI_V1; medic$dif_interv = medic$Date_diff #keep uncentered for descriptive stats + reverse BMI_diff so it in terms of actual weight loss and not weight gain"
"0","biomed <- c('age','Date_diff','BW_diff','BMI_diff','WC_diff','Insulin_diff','X2.AG_diff','reelin_diff','MCP_diff','TNFalpha_diff','GLP_diff','Ghrelin_diff','Glu_diff','HOMA_IR_diff', 'AEA_diff', 'OEA_diff', 'PEA_diff', 'BMI_V1')"
"0","medic = medic %>% group_by %>% mutate_at(biomed, scale)"
"0",""
"0","#remove outliers from biomedical (+- 3 SD)"
"0","df_dict <- data.frame(variable = biomed, out_low = rep(-3,length(biomed)),  out_high = rep(3,length(biomed)))"
"0","for (var in df_dict$variable) {"
"0","  medic[[var]][medic[[var]] < df_dict[df_dict$variable == var, ]$out_low | medic[[var]] > df_dict[df_dict$variable == var, ]$out_high] <- NaN}"
"0",""
"0","#merge with medic"
"0","tables = tables[-length(tables)]; # remove intern"
"0","dflist <- lapply(mget(tables),function(x)merge(x, medic, by = ""id""))"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","# creates internal states variables for each data"
"0","listA = 2:5"
"0","def = function(data, number){"
"0","  baseINTERN = subset(intern, phase == number)"
"0","  data = merge(x = get(data), y = baseINTERN[ , c(""thirsty"", 'hungry',  'piss', 'id', 'session')], by = c(""id"", 'session'), all.x=TRUE)"
"0","  return(data)"
"0","}"
"0","dflist = mapply(def,tables,listA)"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","#center covariates"
"0","numer <- c('thirsty','hungry')"
"0","dflist <- lapply(mget(tables),function(x) x %>% group_by %>% mutate_at(numer, scale))"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","covariate = c(biomed, numer)"
"0",""
"0",""
"0","# prepro RT PAV -----------------------------------------------------------"
"0",""
"0","# get times in milliseconds "
"0","PAV$RT    <- PAV$RT * 1000"
"0",""
"0","#Preprocessing"
"0","PAV$condition <- droplevels(PAV$condition, exclude = ""Baseline"")"
"0","acc_bef = mean(PAV$ACC, na.rm = TRUE) # 0.87"
"0","full = length(PAV$RT)"
"0",""
"0","##shorter than 100ms and longer than 3sd+mean"
"0","PAV.clean <- filter(PAV, RT >= 100) # min RT is "
"0","PAV.clean <- ddply(PAV.clean, .(id, session), transform, RTm = mean(RT), RTsd = sd(RT))"
"0","PAV.clean <- filter(PAV.clean, RT <= RTm+3*RTsd) "
"0",""
"0","# calculate the dropped data in the preprocessing"
"0","clean = length(PAV.clean$RT)"
"0","dropped = full-clean"
"0","(dropped*100)/full #13.26754"
"1","[1]"
"1"," 13.26754"
"1","
"
"0","# clean PAV --------------------------------------------------------------"
"0",""
"0","PAV = PAV.clean"
"0","# define as.factors"
"0","fac <- c(""id"", ""trial"", ""condition"", ""session"", ""intervention"",""trialxcondition"", ""gender""); PAV[fac] <- lapply(PAV[fac], factor)"
"0",""
"0","#revalue all catego"
"0","PAV$session = PAV$session = ifelse(PAV$session == ""second"", -1, 1)"
"0","  #as.factor(revalue(PAV$session, c(second=""-1"", third=""1""))) #change value of session"
"0","PAV$condition = ifelse(PAV$condition == ""CSminus"", -1, 1) "
"0","PAV$gender = ifelse(PAV$gender == ""0"", -1, 1) "
"0","PAV$intervention = ifelse(PAV$intervention == ""0"", -1, 1)  #change value of intervention"
"0","#PAV$condition = as.factor(revalue(PAV$condition, c(CSminus=""-1"", CSplus=""1"")));"
"0",""
"0",""
"0","PAV.means <- aggregate(PAV[,c(covariate, ""weightLoss"", ""ageF"",  ""bmi1"", ""liking"", ""RT"")] , by = list(PAV$id, PAV$condition,PAV$session,PAV$intervention, PAV$gender), FUN = 'mean',na.action = na.omit)"
"0",""
"0","colnames(PAV.means) <- c('id','condition','session','intervention', 'gender', covariate,""weightLoss"", ""ageF"", ""bmi1"", ""liking"", ""RT"")"
"0",""
"0",""
"0","#imput mean (0) for the two covariate (MAR) so we can get BF (missing values fot 2 participant 262 and 232)"
"0","#PAV.means$thirsty[is.na(PAV.means$thirsty)] <- 0 ; PAV.means$hungry[is.na(PAV.means$hungry)] <- 0 "
"0",""
"0","# clean INST --------------------------------------------------------------"
"0","INST$Trial = as.numeric(INST$trial)"
"0","x = lspline(INST$Trial, 5); INST$Trial1 = x[,1]; INST$Trial2 = x[,2]; "
"0",""
"0","# define as.factors"
"0","fac <- c(""id"", ""session"", ""intervention"", ""gender""); INST[fac] <- lapply(INST[fac], factor)"
"0",""
"0","#revalue all catego"
"0","INST$gender = INST$gender = ifelse(INST$gender == ""0"", -1, 1)"
"0","INST$session = INST$session = ifelse(INST$session == ""second"", -1, 1)"
"0","#as.factor(revalue(PAV$session, c(second=""-1"", third=""1""))) #change value of session"
"0","INST$intervention = ifelse(INST$intervention == ""0"", -1, 1)  #change value of intervention"
"0","# INST$session = as.factor(revalue(INST$session, c(second=""0"", third=""1""))) #change value of session"
"0",""
"0","# get the averaged dataset"
"0","INST.means <- aggregate(INST[,c(covariate, ""grips"")] , by = list(INST$id,INST$trial, INST$session,INST$intervention, INST$gender), FUN = 'mean',na.action = na.omit)"
"0",""
"0","colnames(INST.means) <- c('id','trial','session','intervention', 'gender', covariate, ""grips"")"
"0",""
"0","#imput mean (0) for the two covariate (MAR) so we can get BF (missing values for 3 participant 239, 258, 231)"
"0","#INST.means$thirsty[is.na(INST.means$thirsty)] <- 0 ; INST.means$hungry[is.na(INST.means$hungry)] <- 0 "
"0",""
"0","INST.means$Trial = as.numeric(INST.means$trial)"
"0","x = lspline(INST.means$Trial, 5); INST.means$Trial1 = x[,1]; INST.means$Trial2 = x[,2]; "
"0",""
"0","dfTrial = ddply(INST,.(trial,session),summarise,grips=mean(grips)); dfTrial$Trial = scale(as.numeric(dfTrial$trial))"
"0",""
"0","dfTrial$phasis = ifelse(dfTrial$Trial >	-1.07212710 , ""1"", ""0"")"
"0","dfTrial$T2 = ifelse(dfTrial$Trial > 0, dfTrial$Trial^2, -dfTrial$Trial^2)"
"0",""
"0","# clean PIT --------------------------------------------------------------"
"0",""
"0","# define as.factors"
"0","fac <- c(""id"", ""trial"", ""condition"", ""session"", ""intervention"",""trialxcondition"", ""gender""); PIT[fac] <- lapply(PIT[fac], factor)"
"0",""
"0","PIT.base =  subset(PIT, condition == 'BL'); PIT.csp =  subset(PIT, condition == 'CSplus'); PIT.csm =  subset(PIT, condition == 'CSminus')"
"0","PIT.csp = PIT.csp %>% arrange(desc(id)); PIT.csm =PIT.csm %>% arrange(desc(id)); PIT.base =PIT.base %>% arrange(desc(id)) #order by id"
"0","#PIT.csp$AUC = PIT.csp$AUC - PIT.base$AUC; PIT.csm$AUC = PIT.csm$AUC - PIT.base$AUC"
"0","PIT.clean = rbind(PIT.csp, PIT.csm) #bind together"
"0",""
"0","#revalue all catego"
"0","PIT.clean$condition = ifelse(PIT.clean$condition == ""CSminus"", -1, 1) "
"0","PIT.clean$gender = PIT.clean$gender = ifelse(PIT.clean$gender == ""0"", -1, 1)"
"0","PIT.clean$session = PIT.clean$session = ifelse(PIT.clean$session == ""second"", -1, 1)"
"0","PIT.clean$intervention = ifelse(PIT.clean$intervention == ""0"", -1, 1)"
"0",""
"0","PIT.means <- aggregate(PIT.clean[,c(covariate, ""AUC"")] , by = list(PIT.clean$id, PIT.clean$condition,PIT.clean$session,PIT.clean$intervention, PIT.clean$gender), FUN = 'mean',na.action = na.omit)"
"0",""
"0","colnames(PIT.means) <- c('id','condition','session','intervention', 'gender', covariate, ""AUC"")"
"0",""
"0","#imput mean (0) for the two covariate (MAR) so we can get BF (missing values fot 2 participant 229 and 238)"
"0","#PIT.means$thirsty[is.na(PIT.means$thirsty)] <- 0 ; PIT.means$hungry[is.na(PIT.means$hungry)] <- 0 "
"0",""
"0",""
"0","PIT.p <- summarySEwithin(PIT.clean,"
"0","                         measurevar = ""AUC"","
"0","                         withinvars = c(""trialxcondition"",""condition"", ""session""),"
"0","                         idvar = ""id"")"
"2","Automatically converting the following non-factors to factors: condition, session
"
"0","PIT.p$trial <- as.numeric(PIT.p$trialxcondition)"
"0","PIT.p = select(PIT.p, c('trial', 'N' , 'AUC', 'sd', 'se', 'ci', 'condition',""session""))"
"0","PIT.p$condition <- relevel(PIT.p$condition, ""1"") # Make MilkShake first"
"0",""
"0",""
"0","PIT.group <- summarySEwithin(PIT.clean,"
"0","                         measurevar = ""AUC"","
"0","                         withinvars = c(""trialxcondition"",""condition"", ""session""),"
"0","                         betweenvars = ""intervention"","
"0","                         idvar = ""id"")"
"2","Automatically converting the following non-factors to factors: intervention, condition, session
"
"0","PIT.group$trial <- as.numeric(PIT.group$trialxcondition)"
"0","PIT.group = select(PIT.group, c('trial', 'N' , 'AUC', 'sd', 'se', 'ci', 'condition', 'intervention',""session""))"
"0","PIT.group$condition <- relevel(PIT.group$condition, ""1"") # Make MilkShake first"
"0",""
"0",""
"0",""
"0","# clean HED --------------------------------------------------------------"
"0",""
"0",""
"0","# define as.factors"
"0","fac <- c(""id"", ""trial"", ""condition"", ""session"", ""intervention"",""trialxcondition"", ""gender""); HED[fac] <- lapply(HED[fac], factor)"
"0",""
"0","# recode as contr.sum dummy coding"
"0","HED$intervention = ifelse(HED$intervention == ""0"", 1,-1) #change value of group"
"0","HED$gender = ifelse(HED$gender == ""0"", -1, 1) #change value of gender"
"0","HED$condition = ifelse(HED$condition == ""MilkShake"", 1,-1); #change value of condition"
"0","HED$session = ifelse(HED$session == ""second"", 1,-1); #change value of condition"
"0",""
"0",""
"0","# create Intensity and Familiarity diff"
"0","bs = ddply(HED, .(id, condition), summarise, int = mean(perceived_intensity, na.rm = TRUE), fam = mean(perceived_familiarity, na.rm = TRUE)) "
"0","Empty = subset(bs, condition == ""-1""); Milkshake = subset(bs, condition == ""1""); diff = Empty;"
"0","diff$int = Milkshake$int - Empty$int; diff$fam = Milkshake$fam - Empty$fam;"
"0","HED = merge(x = HED, y = diff[ , c(""int"", ""fam"", 'id')], by = ""id"", all.x=TRUE)"
"0",""
"0","#center covariates"
"0","numer <- c(""fam"", ""int"")"
"0","HED = HED %>% group_by %>% mutate_at(numer, scale)"
"0","HED$intensity = HED$int; HED$familiarity = HED$fam"
"0",""
"0",""
"0","HED.means <- aggregate(HED[,c(covariate, ""fam"", ""int"", ""perceived_liking"")] , by = list(HED$id, HED$condition,HED$session,HED$intervention, HED$gender), FUN = 'mean', na.action = na.omit)"
"0",""
"0","colnames(HED.means) <- c('id','condition','session','intervention', 'gender', covariate, ""fam"", ""int"", ""perceived_liking"")"
"0",""
"0","#imput mean (0) for the two covariate (MAR) so we can get BF (missing values fr 1 participant 217)"
"0","#HED.means$thirsty[is.na(HED.means$thirsty)] <- 0 ; HED.means$hungry[is.na(HED.means$hungry)] <- 0 "
"0",""
"0","# ALL ---------------------------------------------------------------------"
"0",""
"0","#factorize ID"
"0","tables <- c(""PAV.means"",""PIT.means"",""HED.means"")"
"0","dflist <- lapply(mget(tables),function(x)facID(x))"
"0","list2env(dflist, envir=.GlobalEnv)"
"1","<environment: R_GlobalEnv>
"
"0","save(PAV.means, file = ""data/PAV.Rdata"")"
"0","save(INST.means, file = ""data/INST.Rdata"")"
"0","save(PIT.means, file = ""data/PIT.Rdata"")"
"0","save(HED.means, file = ""data/HED.Rdata"")"
"0",""
"0","#create df for AFNI"
"0","dfHED = HED.means"
"0","dfHED[is.na(dfHED)] <- 0 "
"0","save(dfHED, file = ""data/HED_fmri.Rdata"")"
"0",""
"0","# internHED = subset(intern, phase ==5)"
"0","# dfx = x = Reduce(function(x,y) merge(x = x, y = y, by = ""id""), "
"0","#                  list(df, internHED, info)); dfx[is.na(dfx)] <- 0 "
"0","# x = Reduce(function(x,y) merge(x = x, y = y, by = c(""id"",""session"")), "
"0","#            list(dfl, dfm, dfx))"
"0","# "
"0","# tables = c('x') "
"0","# numer <- c(""thirsty"", ""hungry"",  ""piss"", ""OEA"", ""PEA"",""X2.AG"",""AEA"",""Leptin"",  ""Resistin"",""adiponectin"",""MCP"",""TNFalpha"",""reelin"",""glucagon"", ""Ghrelin"",""obestatin"",""GLP1"",""insulin"",""Fast_glu"",""BMI_t1"", ""bmi_diff"")"
"0","# dflist <- lapply(mget(tables),function(x) x %>% group_by %>% mutate_at(numer, scale))"
"0","# list2env(dflist, envir=.GlobalEnv); x$age = x$age_Z"
"0","# "
"0","# dfHED = select(x, -c(age_Z, bmi1, bmi_dif, task, phase, idXsession, BMI_t2, group))"
"0","# dfHED$session = as.factor(revalue(as.factor(dfHED$session), c(""second""=""0"", ""third""=""1""))); dfHED1 = dfHED;  dfHED2 = dfHED; dfHED1$condition = ""1""; dfHED2$condition = ""-1""; dfHED = rbind(dfHED1, dfHED2); dfHED[is.na(dfHED)] <- 0 "
"0","# "
"0","# save(dfHED, file = ""data/HED_fmri.Rdata"")"
"0","# "
"0",""
"0","# create df for weight loss"
"0","df = subset(PAV.means, session == ""1""); df = subset(df, condition == ""1"")"
"0","df$AGE = df$ageF; df$BMI = df$bmi1 ; df$GENDER = df$gender; df$INTERVENTION = df$intervention"
"0","#df$intervention = ifelse(df$intervention == -1, -1, 1) #change value of intervention"
"0","#df$gender = ifelse(df$gender == 0, -1, 1) #change value of gender"
"0",""
"0","df$INTERVENTION = as.factor(revalue(as.factor(df$INTERVENTION), c(""-1""=""Placebo"", ""1""=""Liraglutide"")))#using pav.means but oculd be any other"
"0","df$GENDER = as.factor(revalue(as.factor(df$GENDER), c(""-1""=""Men"", ""1""=""Women"")))"
"0",""
"0","med <- gather(df, ""feature"", ""n"", 8:22)"
"0",""
"0",""
"0","#biomed = numer[3:14]; "
"0","dfmed = na.omit(medic[,c('intervention',biomed[3:14])]) #create df for var selec"
"0",""
"0",""
"0","#inter score for fmri Plots"
"0","diffPRE = subset(HED_fMRI, session == 'pre') ; diffPOST = subset(HED_fMRI, session == 'post')"
"0","inter = diffPRE; inter$OFC_inter =  diffPOST$OFC_score - diffPRE$OFC_score; inter$HF_inter =  diffPOST$HF_score - diffPRE$HF_score"
"0",""
"0","inter$id = as.factor(inter$id); inter$intervention = as.factor(inter$intervention)"
"0",""
"0","inter = filter(inter, id %notin% c(246)) #remove huge outlier because it biases the whole further results on mediation and weigthloss -> you can check it ou via:"
"0","# ggplot(inter, aes(x= BMI_diff, y=intervention, label=id))+"
"0","#   geom_point() +geom_text(aes(label=id),hjust=1, vjust=0)"
"0","weightloss = inter$BMI_diff; #reverse in terms of wight loss not weigth gain"
"0",""
"0","ind <- sapply(inter, is.numeric)"
"0","inter[ind] <- lapply(inter[ind], scale)"
"0","inter$Intervention = as.numeric(inter$intervention); inter$HF  = as.vector(inter$HF_inter); inter$`Weight Loss` = -as.vector(weightloss) #reverse to have it in positive terms"
