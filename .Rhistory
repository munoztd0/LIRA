dev.off()
mf = formula(perceived_liking ~ condition*intervention*session + age + gender + BMI_V1  + hungry + GLP_diff + reelin_diff + int + fam + (condition*session|id) + (1|trialxcondition))
# -------------------------------------- Bayesian Regression Models using Stan -------------------------------------
bmod_full = brm(bf(mf, hu ~ 1), family = hurdle_gaussian, stanvars = stanvars, data=HED, prior =  c(prior(normal(0, 3), class = "b", coef = ""), prior(normal(0, 100), class = "Intercept", coef = ""), prior(logistic(0, 0.5), class = "Intercept", dpar = "hu")), sample_prior = T, save_pars = save_pars(all = TRUE), chains = chains,  iter = niter, warmup = warm, seed = 123, inits = 1, backend = 'cmdstan', threads = threading(4))# a lot to unwind here.. 1)  custom gaussian hurdle cause zero-inflated continous data 2) Generic weakly informative prior around 0 for fixed effects and very weak prior for the intercept 3) we need to sample priors and save parameters for computing BF #this one is a big longer, so seat tight
#lmer to compare
fmod_full = lmer(mf , data = HED, REML=F, control = control)
mcmc_plot(object = bmod_full,  pars =c("b_.*o", "b_.*y", "b_.*ge", "b_.*diff", "b_.*V1", "b_int", "b_fam"), type ="areas")
mcmc_plot(object = bmod_full,  pars =c("b_.*o", "b_.*y", "b_.*ge", "b_.*diff", "b_.*V1", "b_int", "b_fam"), type ="trace")
pp_check(bmod_full, type = "stat_grouped", stat = "median", group = "intervention", binwidth = 1, nsamples = NULL)
pp_check(bmod_full, type = "stat_grouped", stat = "median", group = "intervention", binwidth = 0.1, nsamples = NULL)
pp_check(bmod_full, nsamples = 10) # check response fit
pp_check(bmod_full, type = "stat_grouped",  group = "intervention", binwidth = 0.1, nsamples = NULL)
pp_check(bmod_full, type ="error_scatter_avg", nsamples = NULL) # check good alignment between model and data, and no obvious pattern to the types of errors we are getting.
residuals <-residuals(bmod_full)[, 1]; res <- qqnorm(residuals, pch = 1, plot.it=T)
residuals <-residuals(bmod_full)[, 1]; res <- qqnorm(residuals, pch = 1, plot.it=F)
lmx = plot_model(fmod_full, type = "diag"); #diagnostic plots for lmer
lmx
lmx[1]
## plot population-level effects posterior distributions and chain sampling
param = mcmc_plot(object = bmod_full,  pars =c("b_.*o", "b_.*y", "b_.*ge", "b_.*diff", "b_.*V1", "b_int", "b_fam"), type ="areas")  # int and fam
trace = mcmc_plot(object = bmod_full,  pars =c("b_.*o", "b_.*y", "b_.*ge", "b_.*diff", "b_.*V1", "b_int", "b_fam"), type ="trace")
#check assumptions
var_group = pp_check(bmod_full, type = "stat_grouped", stat = "median", group = "intervention", binwidth = 0.1, nsamples = NULL) #equality of variance between groups
rep_fit = pp_check(bmod_full, nsamples = 10) # check response fit
error = pp_check(bmod_full, type ="error_scatter_avg", nsamples = NULL) # check good alignment between model and data, and no obvious pattern to the types of errors we are getting.
#Normality of errors
residuals <-residuals(bmod_full)[, 1]; res <- qqnorm(residuals, pch = 1, plot.it=F)
lmx = plot_model(fmod_full, type = "diag"); #diagnostic plots for lmer
#plot all
diagPIT <- ggarrange(param, var_group, rep_fit, error, ncol = 2, nrow = 2)
annotate_figure(diagPIT, top = text_grob("Diagnostic Plots", face = "bold", size = 10))
# check response fit -> capture better the weird (bimodal at least..) distrib
# residual ... could be better but at least it's MUCH better than simple gaussian see lmx[1] ... this is just catastrophic..
cl
cores
bmod_full
report::report_model(bmod_full)
report::report_model(bmod_full, max_treedepth=100)
full_tab
report[5]
tables <- list.clean(readHTMLTable("tmp/temp6.html"), fun = is.null, recursive = FALSE)
tables2 = tables[[1]] %>% janitor::row_to_names(row_number = 1)
tables2 <- as.matrix(tables2) %>% as_tibble();
tables2[is.na(tables2)] <- "";  names(tables2) <- NULL; tmp = t(tables2[(length(full_tab$Parameter)+1):(length(full_tab$Parameter)+5),1:2]);
tmp[,5][1] = "R2"; tmp[,5][2] = gsub(".*/","",tmp[,5][2])
pander::pander(tmp)
tab_model(bmod_full, show.p = F,show.intercept = F, show.se = T, title ="", show.re.var = F, digits = 3, dv.labels = "Perceived liking", file = "tmp/temp6.html", transform = NULL,  rm.terms = "hu_Intercept")
View(HED)
View(HED)
tables <- list.clean(readHTMLTable("tmp/temp6.html"), fun = is.null, recursive = FALSE)
tables2 = tables[[1]] %>% janitor::row_to_names(row_number = 1)
tables2 <- as.matrix(tables2) %>% as_tibble();
tables2
tables2[is.na(tables2)] <- "";  names(tables2) <- NULL; tmp = t(tables2[(length(full_tab$Parameter)+1):(length(full_tab$Parameter)+5),1:2]);
tmp[,5][1] = "R2"; tmp[,5][2] = gsub(".*/","",tmp[,5][2])
pander::pander(tmp)
tables2
tables2[is.na(tables2)] <- "";  names(tables2) <- NULL; tmp = t(tables2[(length(full_tab$Parameter)+2):(length(full_tab$Parameter)+6),1:2]);
tmp[,5][1] = "R2"; tmp[,5][2] = gsub(".*/","",tmp[,5][2])
pander::pander(tmp)
tables2[is.na(tables2)] <- "";  names(tables2) <- NULL; tmp = t(tables2[(length(full_tab$Parameter)+3):(length(full_tab$Parameter)+7),1:2]);
tmp
tmp[,5][1] = "R2"; tmp[,5][2] = gsub(".*/","",tmp[,5][2])
tmp
pander::pander(tmp)
dfdraws = bmod_full %>%
spread_draws(`b_condition` )
HDI_HED = plotHDI( dfdraws$`b_condition` , credMass = .90, binSize = 100, Title = "") + theme_bw()
#plot estimated means from posterior distribution from the model draws
dfdraws2 =  bmod_full %>%
emmeans(~ condition) %>%
gather_emmeans_draws()
# CSp = subset(dfdraws2, condition ==1); CSm = subset(dfdraws2, condition ==-1); diff= CSp; diff$.value = CSp$.value - CSm$.value
pp = dfdraws2 %>% #diff
ggplot(aes(x = as.factor(condition) , y = .value,  fill = as.factor(condition))) +
#geom_abline(slope= 0, intercept=0, linetype = "dashed", color = "black") +
#geom_point(position = "jitter") +
stat_slab(.width = c(0.50, 0.9), position="dodge", alpha=0.5) +
stat_pointinterval(.width = c(0.50, 0.9),position="dodge") +
labs(x = "", y = "Perceived liking", title = "") +
scale_fill_manual(values=c("-1" = pal[1],"1"=pal[3]), guide="none") +
scale_color_manual( values=c("-1" = pal[1],"1"=pal[3]), guide="none") +
scale_x_discrete(labels=c("Tasteless", "Milkshake")) +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,100, by = 20)), limits = c(-0.5,100.5)) +
theme_bw()
plt_bayes_html = pp + html_theme
plt_bayes = pp + averaged_theme
figureHED <- ggarrange(plt_bayes_html, HDI_HED,
labels = c("A", "B"),
ncol = 2)
figureHED
full_tab
full_tab = describe_posterior(bmod_full,
estimate = "median", dispersion = T,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
full_tab = filter(full_tab, Parameter %notin% c("b_Intercept", "b_hu_Intercept", "prior_sigma"))
full_tab
# AVERAGED EFFECT
dfH <- summarySEwithin(HED.means,
measurevar = "lik",
withinvars = c("condition","session"),
idvar = "id")
dfH$cond <- ifelse(dfH$condition == "1", -0.25, 0.25)
HED.means$cond <- ifelse(HED.means$condition == "1", -0.25, 0.25)
HED.means <- HED.means %>% mutate(condjit = jitter(as.numeric(cond), 0.3),
grouping = interaction(id, cond))
pp <- ggplot(HED.means, aes(x = cond, y = lik,
fill = condition, color = condition)) +
geom_point(data = dfH, alpha = 0.5) +
geom_line(aes(x = condjit, group = id, y = lik), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = condition, color = NA))+
geom_point(aes(x = condjit, shape = intervention), alpha = .3,) +
geom_crossbar(data = dfH, aes(y = lik, ymin=lik-se, ymax=lik+se), width = 0.2 , alpha = 0.1)+
ylab('Perceived liking') +
xlab('Taste') +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,100, by = 20)), limits = c(-0.5,100.5)) +
scale_x_continuous(labels=c("Pleasant", "Neutral"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
scale_fill_manual(values=c("1"= pal[3], "-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1"=pal[3], "-1"=pal[1]), guide = 'none') +
scale_shape_manual(name="Intervention", labels=c("Placebo", "Liraglutide"), values = c(1, 2)) +
theme_bw()+ facet_wrap(~session, labeller=labeller(session = labels))
pp + html_theme +theme(legend.position=c(.96,.94))
plt = pp + averaged_theme +theme(legend.position=c(.96,.94))
HED.means$perceived_liking
dfH <- summarySEwithin(HED.means,
measurevar = "perceived_liking",
withinvars = c("condition","session"),
idvar = "id")
dfH$cond <- ifelse(dfH$condition == "1", -0.25, 0.25)
HED.means$cond <- ifelse(HED.means$condition == "1", -0.25, 0.25)
HED.means <- HED.means %>% mutate(condjit = jitter(as.numeric(cond), 0.3),
grouping = interaction(id, cond))
pp <- ggplot(HED.means, aes(x = cond, y = perceived_liking,
fill = condition, color = condition)) +
geom_point(data = dfH, alpha = 0.5) +
geom_line(aes(x = condjit, group = id, y = perceived_liking), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = condition, color = NA))+
geom_point(aes(x = condjit, shape = intervention), alpha = .3,) +
geom_crossbar(data = dfH, aes(y = perceived_liking, ymin=perceived_liking-se, ymax=perceived_liking+se), width = 0.2 , alpha = 0.1)+
ylab('Perceived liking') +
xlab('Taste') +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,100, by = 20)), limits = c(-0.5,100.5)) +
scale_x_continuous(labels=c("Pleasant", "Neutral"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
scale_fill_manual(values=c("1"= pal[3], "-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1"=pal[3], "-1"=pal[1]), guide = 'none') +
scale_shape_manual(name="Intervention", labels=c("Placebo", "Liraglutide"), values = c(1, 2)) +
theme_bw()+ facet_wrap(~session, labeller=labeller(session = labels))
pp + html_theme +theme(legend.position=c(.96,.94))
plt = pp + averaged_theme +theme(legend.position=c(.96,.94))
pp <- ggplot(HED.means, aes(x = cond, y = perceived_liking,
fill = as.factor(condition), color = as.factor(condition))) +
geom_point(data = dfH, alpha = 0.5) +
geom_line(aes(x = condjit, group = id, y = perceived_liking), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = as.factor(condition), color = NA))+
geom_point(aes(x = condjit, shape = intervention), alpha = .3,) +
geom_crossbar(data = dfH, aes(y = perceived_liking, ymin=perceived_liking-se, ymax=perceived_liking+se), width = 0.2 , alpha = 0.1)+
ylab('Perceived liking') +
xlab('Taste') +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,100, by = 20)), limits = c(-0.5,100.5)) +
scale_x_continuous(labels=c("Pleasant", "Neutral"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
scale_fill_manual(values=c("1"= pal[3], "-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1"=pal[3], "-1"=pal[1]), guide = 'none') +
scale_shape_manual(name="Intervention", labels=c("Placebo", "Liraglutide"), values = c(1, 2)) +
theme_bw()+ facet_wrap(~session, labeller=labeller(session = labels))
pp + html_theme +theme(legend.position=c(.96,.94))
plt = pp + averaged_theme +theme(legend.position=c(.96,.94))
pp <- ggplot(HED.means, aes(x = cond, y = perceived_liking,
fill = as.factor(condition), color = as.factor(condition))) +
geom_point(data = dfH, alpha = 0.5) +
geom_line(aes(x = condjit, group = id, y = perceived_liking), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = as.factor(condition), color = NA))+
geom_point(aes(x = condjit, shape = as.factor(intervention)), alpha = .3,) +
geom_crossbar(data = dfH, aes(y = perceived_liking, ymin=perceived_liking-se, ymax=perceived_liking+se), width = 0.2 , alpha = 0.1)+
ylab('Perceived liking') +
xlab('Taste') +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,100, by = 20)), limits = c(-0.5,100.5)) +
scale_x_continuous(labels=c("Pleasant", "Neutral"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
scale_fill_manual(values=c("1"= pal[3], "-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1"=pal[3], "-1"=pal[1]), guide = 'none') +
scale_shape_manual(name="Intervention", labels=c("Placebo", "Liraglutide"), values = c(1, 2)) +
theme_bw()+ facet_wrap(~session, labeller=labeller(session = labels))
pp
pp + html_theme +theme(legend.position=c(.96,.94))
plt = pp + averaged_theme +theme(legend.position=c(.96,.94))
pp <- ggplot(HED.p, aes(x = as.numeric(trial), y = perceived_liking,
color = condition,
fill  = condition))+
geom_point(data = HED.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F) +
geom_ribbon(aes(ymax = perceived_liking + se, ymin = perceived_liking - se),  alpha=0.4) +
geom_point() +
ylab('Perceived Liking')+
xlab('Trial')+
scale_color_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1' =pal[1])) +
scale_fill_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1'=pal[1])) +
scale_y_continuous(expand = c(0, 0),  limits = c(0,100),  breaks=c(seq.int(0,100, by = 20))) +
scale_x_continuous(expand = c(0, 0),  limits = c(0,21),  breaks=c(seq.int(1,21, by = 2))) +
guides(color=guide_legend(override.aes=list(fill=c(pal[3], pal[1]), color=c(pal[3], pal[1]))))+
theme_bw()
scale_shape_manual(name="Group", labels=c("Placebo", "Liraglutide"), values = c(1, 2, 18)) +
theme_bw() +
facet_wrap(~session, labeller=labeller(session =labels))
pp + html_theme + theme(strip.background = element_rect(fill="white"), legend.key.size = unit(0.3, "cm"))
plt = pp + averaged_theme + theme(strip.background = element_rect(fill="white"), legend.key.size = unit(0.8, "cm"), axis.text.x = element_text(size = 16))
HED.p <- summarySEwithin(HED.clean,
measurevar = "perceived_liking",
withinvars = c("trialxcondition","condition", "session"),
idvar = "id")
HED.p$trial <- as.numeric(HED.p$trialxcondition)
HED.p = select(HED.p, c('trial', 'N' , 'perceived_liking', 'sd', 'se', 'ci', 'condition',"session"))
HED.p$condition <- relevel(HED.p$condition, "1") # Make MilkShake first
HED.group <- summarySEwithin(HED.clean,
measurevar = "perceived_liking",
withinvars = c("trialxcondition","condition", "session"),
betweenvars = "intervention",
idvar = "id")
HED.group$trial <- as.numeric(HED.group$trialxcondition)
HED.group = select(HED.group, c('trial', 'N' , 'perceived_liking', 'sd', 'se', 'ci', 'condition', 'intervention',"session"))
HED.group$condition <- relevel(HED.group$condition, "1") # Make MilkShake first
HED.p <- summarySEwithin(HED,
measurevar = "perceived_liking",
withinvars = c("trialxcondition","condition", "session"),
idvar = "id")
HED.p$trial <- as.numeric(HED.p$trialxcondition)
HED.p = select(HED.p, c('trial', 'N' , 'perceived_liking', 'sd', 'se', 'ci', 'condition',"session"))
HED.p$condition <- relevel(HED.p$condition, "1") # Make MilkShake first
HED.group <- summarySEwithin(HED,
measurevar = "perceived_liking",
withinvars = c("trialxcondition","condition", "session"),
betweenvars = "intervention",
idvar = "id")
HED.group$trial <- as.numeric(HED.group$trialxcondition)
HED.group = select(HED.group, c('trial', 'N' , 'perceived_liking', 'sd', 'se', 'ci', 'condition', 'intervention',"session"))
HED.group$condition <- relevel(HED.group$condition, "1") # Make MilkShake first
pp <- ggplot(HED.p, aes(x = as.numeric(trial), y = perceived_liking,
color = condition,
fill  = condition))+
geom_point(data = HED.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F) +
geom_ribbon(aes(ymax = perceived_liking + se, ymin = perceived_liking - se),  alpha=0.4) +
geom_point() +
ylab('Perceived Liking')+
xlab('Trial')+
scale_color_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1' =pal[1])) +
scale_fill_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1'=pal[1])) +
scale_y_continuous(expand = c(0, 0),  limits = c(0,100),  breaks=c(seq.int(0,100, by = 20))) +
scale_x_continuous(expand = c(0, 0),  limits = c(0,21),  breaks=c(seq.int(1,21, by = 2))) +
guides(color=guide_legend(override.aes=list(fill=c(pal[3], pal[1]), color=c(pal[3], pal[1]))))+
theme_bw()
scale_shape_manual(name="Group", labels=c("Placebo", "Liraglutide"), values = c(1, 2, 18)) +
theme_bw() +
facet_wrap(~session, labeller=labeller(session =labels))
pp + html_theme + theme(strip.background = element_rect(fill="white"), legend.key.size = unit(0.3, "cm"))
plt = pp + averaged_theme + theme(strip.background = element_rect(fill="white"), legend.key.size = unit(0.8, "cm"), axis.text.x = element_text(size = 16))
pp
ggplot(HED.p, aes(x = as.numeric(trial), y = perceived_liking,
color = condition,
fill  = condition))+
geom_point(data = HED.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F)
HED.group
head(HED.group)
head(PIT.group)
ggplot(PIT.p, aes(x = as.numeric(trial), y = AUC,
color = condition,
fill  = condition))+
geom_point(data = PIT.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F) +
geom_ribbon(aes(ymax = AUC + se, ymin = AUC - se),  alpha=0.4) +
geom_point()
ggplot(PIT.p, aes(x = as.numeric(trial), y = AUC,
color = condition,
fill  = condition))+
geom_point(data = PIT.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F) +
geom_ribbon(aes(ymax = AUC + se, ymin = AUC - se),  alpha=0.4) +
geom_point() +
ylab('Mobilized effort (a.u.)')+
xlab('Trial')+
scale_color_manual(labels = c('-1'= 'CS-', "1" = 'CS+'), name="",
values = c("1"= pal[6], '-1'= pal[1])) +
scale_fill_manual(labels = c('-1'= 'CS-', "1" = 'CS+'), name="",
values = c("1"= pal[6], '-1'= pal[1])) +
scale_y_continuous(expand = c(0, 0),  limits = c(50,200),  breaks=c(seq.int(50,200, by = 50))) +
scale_x_continuous(expand = c(0, 0),  limits = c(0,15),  breaks=c(seq.int(1,15, by = 2))) +
scale_shape_manual(name="Group", labels=c("Placebo", "Liraglutide"), values = c(1, 2, 18)) +
theme_bw() +
facet_wrap(~session, labeller=labeller(session =labels))
ggplot(HED.p, aes(x = as.numeric(trial), y = perceived_liking,
color = condition,
fill  = condition))+
geom_point(data = HED.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F) +
geom_ribbon(aes(ymax = perceived_liking + se, ymin = perceived_liking - se),  alpha=0.4) +
geom_point() +
ylab('Perceived Liking')+
xlab('Trial')+
scale_color_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1' =pal[1])) +
scale_fill_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1'=pal[1])) +
scale_y_continuous(expand = c(0, 0),  limits = c(0,100),  breaks=c(seq.int(0,100, by = 20))) +
scale_x_continuous(expand = c(0, 0),  limits = c(0,21),  breaks=c(seq.int(1,21, by = 2))) +
guides(color=guide_legend(override.aes=list(fill=c(pal[3], pal[1]), color=c(pal[3], pal[1]))))+
theme_bw()
scale_shape_manual(name="Group", labels=c("Placebo", "Liraglutide"), values = c(1, 2, 18)) +
theme_bw() +
facet_wrap(~session, labeller=labeller(session =labels))
HED.p
head(HED.p)
ggplot(HED.p, aes(x = as.numeric(trial), y = perceived_liking,
color = condition,
fill  = condition))+
geom_point(data = HED.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F) +
geom_ribbon(aes(ymax = perceived_liking + se, ymin = perceived_liking - se),  alpha=0.4) +
geom_point() +
ylab('Perceived Liking')+
xlab('Trial')+
scale_color_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1' =pal[1])) +
scale_fill_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1'=pal[1])) +
scale_y_continuous(expand = c(0, 0),  limits = c(0,100),  breaks=c(seq.int(0,100, by = 20))) +
scale_x_continuous(expand = c(0, 0),  limits = c(0,21),  breaks=c(seq.int(1,21, by = 2))) +
guides(color=guide_legend(override.aes=list(fill=c(pal[3], pal[1]), color=c(pal[3], pal[1]))))+
scale_shape_manual(name="Group", labels=c("Placebo", "Liraglutide"), values = c(1, 2, 18)) +
theme_bw() +
facet_wrap(~session, labeller=labeller(session =labels))
pp <- ggplot(HED.p, aes(x = as.numeric(trial), y = perceived_liking,
color = condition,
fill  = condition))+
geom_point(data = HED.group, aes(shape = intervention, color = condition), alpha = 0.3) +
geom_line(alpha = .5, size = 1, show.legend = F) +
geom_ribbon(aes(ymax = perceived_liking + se, ymin = perceived_liking - se),  alpha=0.4) +
geom_point() +
ylab('Perceived Liking')+
xlab('Trial')+
scale_color_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1' =pal[1])) +
scale_fill_manual(labels = c('Pleasant', 'Neutral'), name = "",
values = c( "1" =pal[3], '-1'=pal[1])) +
scale_y_continuous(expand = c(0, 0),  limits = c(0,100),  breaks=c(seq.int(0,100, by = 20))) +
scale_x_continuous(expand = c(0, 0),  limits = c(0,21),  breaks=c(seq.int(1,21, by = 2))) +
guides(color=guide_legend(override.aes=list(fill=c(pal[3], pal[1]), color=c(pal[3], pal[1]))))+
scale_shape_manual(name="Group", labels=c("Placebo", "Liraglutide"), values = c(1, 2, 18)) +
theme_bw() +
facet_wrap(~session, labeller=labeller(session =labels))
pp + html_theme + theme(strip.background = element_rect(fill="white"), legend.key.size = unit(0.3, "cm"))
plt = pp + averaged_theme + theme(strip.background = element_rect(fill="white"), legend.key.size = unit(0.8, "cm"), axis.text.x = element_text(size = 16))
bmod_full
full_tab
ems = emmeans(bmod_full, pairwise ~condition:intervention)
ems
full_tab
HED_pla = c(-1,1,0,0) # Pleasant>Neutral Pla
HED_lira = c(0,0,-1,1) # Pleasant>Neutral Lira
con_inter = contrast(ems$emmeans, method = list("Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo" = HED_lira - HED_pla)) #diff of diff
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
ems = emmeans(bmod_full, pairwise ~condition:intervention:session)
ems
HED_pla_pre = c(-1,1,0,0,0,0,0,0) # Pleasant>Neutral Pla
HED_lira_pre = c(0,0,-1,1,0,0,0,0) # Pleasant>Neutral Lira
con_inter_pre = contrast(ems$emmeans, method = list("[PRE] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo" = HED_lira_pre - HED_pla_pre)) #diff of diff
con_inter_pre
HED_pla_post = c(0,0,0,0,-1,1,0,0) # Pleasant>Neutral Pla
HED_lira_post = c(0,0,0,0,0,0,-1,1) # Pleasant>Neutral Lira
con_inter_post = contrast(ems$emmeans, method = list("[POST] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo" = HED_lira_post - HED_pla_post)) #diff of diff
contrast(ems$emmeans, method = list("[POST] - [PRE]" = con_inter_post - con_inter_pre)) #diff of diff
list("[POST] - [PRE]" = con_inter_post - con_inter_pre))
list("[POST] - [PRE]" = con_inter_post - con_inter_pre)
ist("[PRE] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo" = HED_lira_pre - HED_pla_pre)
list("[PRE] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo" = HED_lira_pre - HED_pla_pre)
lsmeans(bmod_full, ~condition*intervention|session)
lsm = lsmeans(bmod_full, ~condition*intervention|session)
contrast(lsm, interaction = "pairwise")
lsm = lsmeans(bmod_full, ~condition*intervention*session)
contrast(lsm, interaction = "pairwise")
lsm = lsmeans(bmod_full, ~condition*intervention|session)
con_inter = contrast(lsm, interaction = "pairwise")
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
con_inter
emmeans(contrast(lsm, interaction = "pairwise"))
lsm = lsmeans(bmod_full, ~condition*intervention*session)
contrast(lsm)
contrast(lsm, interaction = "pairwise")
emmip(lsm, type ~ condition | intervention)
emmip(bmod_full, type ~ condition | intervention)
pairs(lsm, simple = "session")
lsm = lsmeans(bmod_full, ~condition*intervention*session)
pairs(lsm, simple = "session")
lsm = lsmeans(bmod_full, ~condition*intervention|session)
contrast(lsm, interaction = c( "consec"), by = NULL)
contrast(lsm, interaction = c( "consec"), by = session)
contrast(lsm, interaction = c( "consec"), by = "session")
contrast(lsm, interaction = c( "pairwise"), by = "session")
contrast(lsm, by = "session")
contrast(lsm, interaction = c( "pairwise"), by = "session")
contrast(lsm, interaction = c( "consec"), by = "session")
contrast(lsm, interaction = c( "consec"))
contrast(lsm, interaction = c( "consec"), by = NULL)
7.69-12.53
contrast(lsm, by = NULL)
contrast(lsm, interaction = c( "pairwise"), by = NULL)
12.53-7.69
emmip(noise.lm, condition~intervention|session)
emmip(bmod_full, condition~intervention|session)
emmip(bmod_full, condition|session*intervention)
emmip(bmod_full, condition~intervention*session)
emmip(bmod_full, session~intervention|condition)
emmip(bmod_full, session*intervention*condition)
lsmeans(bmod_full, ~session*intervention|condition)
lsm = lsmeans(bmod_full, ~session*intervention|condition)
contrast(lsm, interaction = "pairwise")
lsm = lsmeans(bmod_full, ~condition*intervention|session)
con_inter = contrast(lsm, interaction = "pairwise")
con_inter
contrast(lsm, con_inter)
contrast(con_inter)
contrast(con_inter, pairwise)
contrast(con_inter, interaction = "pairwise")
con_inter = contrast(lsm, interaction = "pairwise")
con_inter
as_tibble(con_inter)
contrast(lsm, interaction = "pairwise", by = NULL)
12.53  -7.69
contrast(lsm, interaction = "consec", by = NULL)
con_inter
lsm = lsmeans(bmod_full, ~condition*intervention*session)
contrast(lsm, interaction = "pairwise", by = "session")
contrast(lsm,  by = "session")
contrast(lsm)
lsm = lsmeans(bmod_full, ~condition*intervention|session)
lsmeans(bmod_full, ~condition*intervention|session)
lsmeans(bmod_full, ~condition|session*intervention)
lsm = lsmeans(bmod_full, ~condition|session*intervention)
lsmeans(bmod_full, ~condition|session*intervention)
contrast(lsm, interaction = "pairwise")
contrast(lsm, interaction = "pairwise", by = NULL)
coef(contrast(lsm, interaction = "pairwise", by = NULL))
coef(contrast(lsm, interaction = "consec", by = NULL))
coef(contrast(lsm, interaction = "consec", by = "session"))
(HED_lira_pre - HED_pla_pre) - (HED_lira_post - HED_pla_post)
con_inter = contrast(ems$emmeans, method = list("[POST] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo" = (HED_lira_pre - HED_pla_pre) - (HED_lira_post - HED_pla_post))) #diff of diff
con_inter
contrast(ems$emmeans, method = list("([POST] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo) - ([PRE] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo)" = (HED_lira_pre - HED_pla_pre) - (HED_lira_post - HED_pla_post))) #diff of diff
con_inter = contrast(ems$emmeans, method = list("([POST] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo) - ([PRE] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo)" = (HED_lira_pre - HED_pla_pre) - (HED_lira_post - HED_pla_post))) #diff of diff
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
con_inter = contrast(ems$emmeans, method = list("([POST] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo) - ([PRE] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo)" = (HED_pla_pre - HED_lira_pre) - (HED_pla_post - HED_lira_post))) #diff of diff
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
con_inter = contrast(ems$emmeans, method = list("([POST] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo) - ([PRE] Pleasant > Neutral: Liraglutide - Pleasant > Neutral: Placebo)" =  (HED_pla_post - HED_lira_post)-(HED_pla_pre - HED_lira_pre))) #diff of diff
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
emmip(bmod_full, condition~|intervention)
emmip(bmod_full, condition|intervention)
emmip(bmod_full, condition~intervention)
emmeans(bmod_full, ~condition|intervention)
contrast(ems, interaction = "pairwise", by = NULL)
contrast(ems, interaction = "pairwise")
ems
ems = emmeans(bmod_full, ~condition|intervention)
ems
contrast(ems, interaction = "pairwise")
contrast(ems, interaction = "pairwise", by = NULL)
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
con_inter = contrast(ems, interaction = "pairwise")
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
con_inter = contrast(ems, interaction = "pairwise", by = NULL)
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
full_tab
describe_posterior(con_inter,
estimate = "median", dispersion = TRUE,
ci = .9, ci_method = "hdi",
bf_prior = bmod_full, diagnostic = "Rhat",
test = c("p_direction", "bf"))
